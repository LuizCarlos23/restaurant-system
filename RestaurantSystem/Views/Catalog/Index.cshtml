@model IEnumerable<RestaurantSystem.Models.CatalogViewModel>

@{
	ViewData["Title"] = "Catálogo";
}

<style>
	.card:hover {
		transform: translateY(-5px);
		box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
		transition: all 0.3s ease;
	}
</style>

<link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />

<div class="container my-5">
	<h1 class="text-center fw-bold mb-3 display-5">
		<i class="bi bi-shop me-2 text-primary"></i>Catálogo
	</h1>
	<hr class="w-25 mx-auto border-primary border-2 rounded-pill">
	
	<div class="d-flex justify-content-end mb-4">
		<button class="btn btn-outline-primary d-flex align-items-center gap-2 px-4 py-2" id="btnShowCart">
			<i class="bi bi-cart-fill"></i>Carrinho
		</button>
	</div>

	<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
		@foreach (var item in Model)
		{
			<div class="col" data-aos="fade-up" data-aos-delay="100">
				<div class="card h-100 shadow-sm border-0 rounded-4 overflow-hidden" onclick="showModal(@item.FoodId)" role="button" style="transition: transform 0.2s;">
					<img src="@Url.Action("GetImage", "Food", new { Id = item.FoodId })"
						 class="card-img-top"
						 style="height: 200px; object-fit: cover;"
						 alt="Imagem do alimento @item.FoodName"
						 onerror="this.onerror=null; this.src='/img/default-image.jpg';" />

					<div class="card-body d-flex flex-column justify-content-between">
						<div>
							<h5 class="card-title fw-bold">@item.FoodName</h5>
							<p class="card-text text-muted small">@item.FoodDescription</p>
						</div>
						<div class="text-end mt-3">
							<span class="fw-bold text-success">R$ @item.FoodPrice.ToString("F2")</span>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
</div>
<!-- Offcanvas do Carrinho -->
<div class="offcanvas offcanvas-end" tabindex="-1" id="shoppingCart" aria-labelledby="shoppingCartLabel">
	<div class="offcanvas-header border-bottom">
		<h5 class="offcanvas-title fw-semibold" id="shoppingCartLabel">Carrinho de Compras</h5>
		<button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Fechar"></button>
	</div>

	<div class="offcanvas-body d-flex flex-column">
		<div id="order" class="flex-grow-1 d-flex flex-column">
			<div id="orderedItems" class="mb-4">
				<!-- Itens do carrinho serão inseridos aqui -->
				<!-- Exemplo:
				<div class="orderItem d-flex justify-content-between align-items-center py-2 border-bottom">
					<div class="flex-grow-1">
						<strong>Nome do Alimento</strong>
						<small class="d-block text-muted">Quantidade: 2</small>
					</div>
					<div class="text-end fw-bold text-success">R$ 19,90</div>
				</div>
				-->
			</div>

			<div class="mt-auto">
				<div class="text-end border-top pt-3">
					<h5 class="mb-3">Total: <span id="cartTotalPrice" class="text-success">R$ 0,00</span></h5>
				</div>

				<div class="d-grid">
					<button class="btn btn-success btn-lg" id="btnBuy">
						<i class="bi bi-cart-check me-2"></i> Finalizar Compra
					</button>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- Modal de Compra -->
<div class="modal fade" id="modalBuy" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg">
		<div class="modal-content rounded-4 shadow-lg border-0">
			<div class="modal-header bg-light border-bottom-0">
				<h5 class="modal-title fw-semibold" id="modelTitle"></h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
			</div>

			<div class="modal-body row g-4 px-4 pt-4">
				<div class="col-md-6 d-flex align-items-center justify-content-center">
					<img src="" class="img-fluid rounded-3 shadow-sm" alt="Imagem do alimento" id="modalImgFood"
						 onerror="this.onerror=null; this.src='/img/default-image.jpg';"
						 style="height: 240px; object-fit: cover; width: 100%;" />
				</div>

				<div class="col-md-6">
					<div class="mb-4">
						<p id="modalFoodDescription" class="text-muted small"></p>
						<h5 class="text-success fw-bold" id="modalFoodBasePrice"></h5>
					</div>

					<div class="mb-4">
						<h6 class="fw-bold mb-2 text-secondary">Ingredientes Opcionais</h6>
						<form id="formOptionalIngredients">
							<div id="modalFoodOptionalIngredients" class="form-check d-flex flex-column gap-1">
								<!-- Ingredientes opcionais aqui -->
							</div>
						</form>
					</div>

					<div class="mb-4">
						<h6 class="fw-bold mb-2 text-secondary">Ingredientes Exclusivos</h6>
						<div id="modalFoodExclusiveIngredients" class="form-check d-flex flex-column gap-1">
							<!-- Ingredientes exclusivos aqui -->
						</div>
					</div>
				</div>
			</div>

			<div class="modal-footer bg-light border-top-0 px-4 py-3 d-flex justify-content-between align-items-center">
				<input type="number" value="1" min="1" class="form-control w-25" id="foodQuantity" />
				<button type="button" class="btn btn-success d-flex align-items-center gap-2 px-4" id="modalAddItemBtn">
					<i class="bi bi-plus-circle"></i>
					<span>Adicionar - <span id="modalFoodPrice">R$ 0,00</span></span>
				</button>
			</div>
		</div>
	</div>
</div>


<!-- Toast de Confirmação -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
	<div id="toastAddToCart" class="toast align-items-center text-white bg-success border-0" role="alert"
		 aria-live="assertive" aria-atomic="true">
		<div class="d-flex">
			<div class="toast-body">
				Item adicionado ao carrinho com sucesso!
			</div>
			<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"
					aria-label="Fechar"></button>
		</div>
	</div>
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script>

		let currentFood = {};
		let currentFoodToAdd = {};

		$("#foodQuantity").on("change", function () {
			let quantity = Number($(this).val());
			changeFoodQuantity(quantity);
		})

		$("#formOptionalIngredients").on("change", function () {
			let checkboxElements = $("#formOptionalIngredients input:checkbox:checked");
			let optionalIngredients = [];
			checkboxElements.each( (_, element) => {
				optionalIngredients.push(Number($(element).val()));
			})
			addOptinoalIngredients(optionalIngredients);
		})

		$("#modalFoodExclusiveIngredients").on("change", function () {
			let exclusiveIngredientId = getSelectedExclusiveIngredientId();
			addExclusiveingredient(exclusiveIngredientId);
		});

		$("#modalAddItemBtn").on("click", function () {
			console.log(currentFoodToAdd);
			addItemToCart();
			$("#modalBuy").modal('toggle');
		})

		$("#btnShowCart").on("click", function () {
			getOrder()
			let cart = new bootstrap.Offcanvas($("#shoppingCart"))
			cart.show()
		})

		$("#btnBuy").on("click", function () {
			buyHandle()
		})

		function addOptinoalIngredients(ingredientsIds = []) {
			currentFoodToAdd.selectedOptionalIngredients = ingredientsIds;

			updateFoodTotalPrice();
		}

		function addExclusiveingredient(id) {
			currentFoodToAdd.ExclusiveIngredientSelectedId = id;

			updateFoodTotalPrice();
		}

		function changeFoodQuantity(quantity) {
			currentFoodToAdd.quantity = quantity;
			updateFoodTotalPrice();
		}

		function getSelectedExclusiveIngredientId() {
			return Number($('input[name="exclusiveIngredients"]:checked').val()) || null;
		}

		function getSumIngredientsPrice() {
			let sumIngredientsPrices = 0;
			let detailsSelectedIngredients = currentFood.OptionalIngredients["$values"]
				.filter(ingredient =>
					currentFoodToAdd.selectedOptionalIngredients.indexOf(ingredient.Id) != -1
				);
			
			detailsSelectedIngredients.map(ingredient => 
				sumIngredientsPrices += ingredient.Price 
			);

			let exclusiveIngredientId = getSelectedExclusiveIngredientId();
			if (exclusiveIngredientId) {
				sumIngredientsPrices += currentFood.ExclusiveIngredients["$values"].filter(item => item.Id == exclusiveIngredientId)[0].Price
			}

			return sumIngredientsPrices;
		}

		function updateFoodTotalPrice(){
			currentFoodToAdd.totalPrice = Number((currentFoodToAdd.basePrice + getSumIngredientsPrice()) * currentFoodToAdd.quantity).toFixed(2);
			updatePriceViewer()
		}

		function updatePriceViewer() {
			$("#modalFoodPrice").text(`R$ ${Number(currentFoodToAdd.totalPrice).toFixed(2)}`);
		}

		function showModal(id) {
			currentFood = {};
			currentFoodToAdd = {};
			$("#foodQuantity").val(1)
			
			$.ajax({
				url: "@Url.Action("GetFood", "Food")"+`/${id}`,
				type: "url",
				datatype: "json",
				success: function(response) {
					console.log(response);
					currentFood = response
					currentFoodToAdd = {
						foodId: response.Id,
						basePrice: response.BasePrice,
						totalPrice: response.BasePrice * 1,
						quantity: 1,
						selectedOptionalIngredients: []
					}

					$("#modalImgFood").attr("onerror", "")
					$("#modalImgFood").attr("src", "")
					$("#modalImgFood").attr("src", `/Food/GetImage/${response.Id}`)
					$("#modalImgFood").attr("onerror", "this.onerror=null; this.src='/img/default-image.jpg';")

					$("#modelTitle").text(response.Name);
					$("#modalFoodDescription").text(response.Description);
					$("#modalFoodBasePrice").text(`R$${Number(response.BasePrice).toFixed(2)}`);
				
					$("#modalFoodOptionalIngredients").html("");

					response.OptionalIngredients["$values"].map(ingredient => {
						let newElement = `
							<div class="form-check">
								<input class="form-check-input" type="checkbox" value="${ingredient.Id}" id="checkbox_${ingredient.Id}">
								<label class="form-check-label" for="checkbox_${ingredient.Id}">
									${ingredient.Name} - R$${Number(ingredient.Price).toFixed(2)}
								</label>
							</div>
						`

						$("#modalFoodOptionalIngredients").append(newElement);
					})

					$("#modalFoodExclusiveIngredients").html(`
						<div class="form-check">
							<input class="form-check-input" type="radio" name="exclusiveIngredients" value="" id="radio_0" checked>
							<label class="form-check-label" for="radio_0">
								Nenhuma
							</label>
						</div>
					`);

					response.ExclusiveIngredients["$values"].map(ingredient => {
						let newElement = `
							<div class="form-check">
								<input class="form-check-input" type="radio" name="exclusiveIngredients" value="${ingredient.Id}" id="radio_${ingredient.Id}">
								<label class="form-check-label" for="radio_${ingredient.Id}">
									${ingredient.Name} - R$${Number(ingredient.Price).toFixed(2)}
								</label>
							</div>
						`

						$("#modalFoodExclusiveIngredients").append(newElement);
					})


					updatePriceViewer(response.BasePrice)
					$("#modalBuy").modal('show');
				},
				error: function() { alert("Ocorreu um error") }
			});

		}

		function addItemToCart() {
			let body = { 
				FoodID: currentFoodToAdd.foodId, 
				quantity: currentFoodToAdd.quantity,
				OptionalIngredientsSelectedIds: currentFoodToAdd.selectedOptionalIngredients,
				ExclusiveIngredientSelectedId: currentFoodToAdd.ExclusiveIngredientSelectedId
			}

			$.ajax({
				url: "@Url.Action("AddOrderItem", "Order")",
				type: "url",
				method: "post",
				data: body,
				datatype: "json",
				success: function(response) {
					console.log(response)
					alert("Adicionado com sucesso!");
				},
				error: function(response) {
					alert("Ocorreu um erro!");
					console.log(response)
				}
			});
		}

		function getOrder() {
			$("#orderedItems").html("");

			$.ajax({
				url: "@Url.Action("GetOrder", "Order")",
				type: "url",
				datatype: "json",
				success: function(response) {
					console.log(response)

					response?.orderedItems?.map(item => {
						let newElement = `
							<div class="orderItem d-flex justify-content-between align-items-center py-2 border-bottom">
								<div class="flex-grow-1">
									<strong>${item.food.name}</strong>
									<small class="d-block text-muted">Quantidade: ${item.quantity}</small>
								</div>
								<div class="text-end fw-bold text-success">R$ ${Number(item.totalPrice).toFixed(2)}</div>
							</div>

						`

						$("#orderedItems").append(newElement);
					})

					$("#cartTotalPrice").text( Number(response?.totalPrice).toFixed(2) )
				},
				error: function(response) {
					alert("Ocorreu um erro!");
					console.log(response)
				}
			});
		}

		function buyHandle()
		{
			$.ajax({
				url: "@Url.Action("Buy", "Order")",
				type: "url",
				datatype: "json",
				success: function(response) {
					alert("Obrigado pela compra")
				},
				error: function(response) {
					alert("Ocorreu um erro ao finalizar a compra!");
					console.log(response)
				}
			});
		}
	</script>
}